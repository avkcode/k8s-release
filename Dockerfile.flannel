# Stage 1: Builder stage
FROM golang:1.23 AS builder

# Define ARGs
ARG FLANNEL_VERSION
ARG FLANNEL_GIT_URL

# Set environment variables
ENV FLANNEL_VERSION=${FLANNEL_VERSION}
ENV FLANNEL_GIT_URL=${FLANNEL_GIT_URL}

ENV GO111MODULE=on
ENV GOPATH=/go
ENV PATH=$PATH:/usr/local/go/bin:$GOPATH/bin

# Install necessary dependencies
RUN apt-get update && apt-get install -y \
    make \
    gcc \
    git \
    bash \
    rsync \
    libpcap-dev \
    python3 \
    && rm -rf /var/lib/apt/lists/*

# Clone and build Flannel
RUN git clone ${FLANNEL_GIT_URL} /flannel && \
    cd /flannel && \
    git checkout ${FLANNEL_VERSION} && \
    make dist/flanneld

# List the built binary for verification
RUN ls -l /flannel/dist/

# Stage 2: Runtime stage
FROM debian:bullseye-slim

# Define ARG again for the second stage
ARG FLANNEL_VERSION

# Set the environment variable in the second stage
ENV FLANNEL_VERSION=${FLANNEL_VERSION}

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    iptables \
    iproute2 \
    conntrack \
    dpkg \
    dpkg-dev \
    rpm \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy the built binary from the builder stage
COPY --from=builder /flannel/dist/flanneld /usr/local/bin/flanneld
COPY package-builder.sh /usr/local/bin/package-builder.sh

# Create directories for systemd units
RUN mkdir -p /systemd-units /config-files

# Copy systemd unit files
COPY systemd-units/flanneld.service /systemd-units/

RUN chmod +x /usr/local/bin/package-builder.sh

# Create output directory first with proper permissions
RUN mkdir -p /output && chmod 777 /output

# Create package based on PACKAGE_TYPE
ENV PACKAGE_TYPE=${PACKAGE_TYPE:-deb}
RUN /usr/local/bin/package-builder.sh flanneld "${FLANNEL_VERSION}" "Flannel Network Fabric for Containers" && \
    ls -la /output

# Make sure the output directory has the right permissions
RUN chmod -R 777 /output

VOLUME ["/output"]

# Copy the packages to a more accessible location
RUN cp /output/*.deb / || true

# Set the entrypoint for the container
ENTRYPOINT ["flanneld"]

# Default command (can be overridden at runtime)
CMD ["--help"]
