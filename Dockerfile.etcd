FROM golang:1.20 AS builder

# Define ARG for etcd version
ARG ETCD_VERSION

# Set the environment variable using the ARG
ENV ETCD_VERSION=${ETCD_VERSION}

ENV GO111MODULE=on
ENV GOPATH=/go
ENV PATH=$PATH:/usr/local/go/bin:$GOPATH/bin

RUN apt-get update && apt-get install -y \
    make \
    gcc \
    git \
    bash \
    rsync \
    && rm -rf /var/lib/apt/lists/*

RUN git clone https://github.com/etcd-io/etcd.git /etcd && \
    cd /etcd && \
    git checkout ${ETCD_VERSION}

WORKDIR /etcd
RUN ./build

RUN ls -l /etcd/bin/

FROM debian:bullseye-slim

# Define ARG again for the second stage
ARG ETCD_VERSION

# Set the environment variable in the second stage
ENV ETCD_VERSION=${ETCD_VERSION}

RUN apt-get update && apt-get install -y \
    bash \
    dpkg \
    dpkg-dev \
    rpm \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

COPY --from=builder /etcd/bin/etcd /usr/local/bin/etcd
COPY --from=builder /etcd/bin/etcdctl /usr/local/bin/etcdctl
COPY package-builder.sh /usr/local/bin/package-builder.sh

# Create directories for systemd units and config files
RUN mkdir -p /systemd-units /config-files

# Copy systemd unit files and config files
COPY systemd-units/etcd.service /systemd-units/
COPY config-files/etcd.conf.yaml /config-files/

RUN chmod +x /usr/local/bin/package-builder.sh

# Create output directory first with proper permissions
RUN mkdir -p /output && chmod 777 /output

# Install dpkg-deb
RUN apt-get update && apt-get install -y dpkg-dev && rm -rf /var/lib/apt/lists/*

# Make package-builder.sh executable
RUN chmod +x /usr/local/bin/package-builder.sh

# Create output directory with proper permissions
RUN mkdir -p /output && chmod 777 /output

# Create packages based on PACKAGE_TYPE
ENV PACKAGE_TYPE=${PACKAGE_TYPE:-deb}
RUN /usr/local/bin/package-builder.sh etcd "${ETCD_VERSION}" "Distributed reliable key-value store" && \
    /usr/local/bin/package-builder.sh etcdctl "${ETCD_VERSION}" "Command line client for etcd" && \
    ls -la /output

# Make sure the output directory has the right permissions
RUN chmod -R 777 /output

VOLUME ["/output"]

# Copy the packages to a more accessible location
RUN cp /output/*.deb / || true

ENTRYPOINT ["etcd"]

CMD ["--help"]
